@page "/EstudianteList";
@using SistemaDeNotas.Data
@using SistemaDeNotas.Data.Model;
@using SistemaDeNotas.Data.Services;

@inject IEstudianteService EstudianteService;
@inject INotasService NotasService;
@inject NavigationManager NavigationManager;


<h1>Lista de Estudiantes</h1>
<a class="btn btn-success" href="EstudianteAdd">Nuevo Estudiante</a>
<button type="button" class="btn btn-default" aria-label="Left Align" title="Edit" @onclick="()=> MateriaPerdida()">
    <span class="oi oi-eye" aria-hidden="true"> Estudiantes que van perdiendo la materia</span>
</button>
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombres</th>
            <th>Apellidos</th>
            <th>Direccion</th>
            <th>Telefono</th>
            <th>Correo</th>
            <th>Accion</th>
        </tr>
    </thead>
    <tbody>
        @if (estudiantes != null)
        {
            @foreach (var estudiante in estudiantes)
            {
                <tr>
                    <td>@estudiante.idEstudiante</td>
                    <td>@estudiante.NombresEstudiante</td>
                    <td>@estudiante.ApellidosEstudiante</td>
                    <td>@estudiante.DireccionEstudiante</td>
                    <td>@estudiante.TelefonoEstudiante</td>
                    <td>@estudiante.CorreoEstudiante</td>
                    <td>
                        <button type="button" class="btn btn-default" aria-label="Left Align" title="Edit" @onclick="()=> EditarEstudiante(estudiante.idEstudiante)">
                            <span class="oi oi-pencil" aria-hidden="true"></span>
                        </button>
                        <button type="button" class="btn btn-default" aria-label="Left Align" title="Delete" @onclick="()=> DeleteEstudiante(estudiante.idEstudiante)">
                            <span class="oi oi-trash" aria-hidden="true"></span>
                        </button>
                    </td>
                </tr>
            }


        }

    </tbody>
</table>
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombres</th>
            <th>Apellidos</th>
            <th>Direccion</th>
            <th>Telefono</th>
            <th>Correo</th>
            <th>Accion</th>
        </tr>
    </thead>
    <tbody>
        @if (estudiantesPerdiendo != null)
        {
            @foreach (var estudianteperdido in estudiantesPerdiendo)
            {
                <tr>
                    <td>@estudianteperdido.idEstudiante</td>
                    <td>@estudianteperdido.NombresEstudiante</td>
                    <td>@estudianteperdido.ApellidosEstudiante</td>
                    <td>@estudianteperdido.DireccionEstudiante</td>
                    <td>@estudianteperdido.TelefonoEstudiante</td>
                    <td>@estudianteperdido.CorreoEstudiante</td>
                </tr>

            }
        }
    </tbody>
</table>
@if (estudiantesPerdiendo != null)
{
    @foreach (var estudianteperdido in estudiantesPerdiendo)
    {
        @estudianteperdido.idEstudiante
        @estudianteperdido.NombresEstudiante
        @estudianteperdido.CorreoEstudiante
        @estudianteperdido.DireccionEstudiante
    }
}


@code {


    IEnumerable<Estudiante> estudiantes;
    IEnumerable<Estudiante> estudiantesPerdiendo;

    protected override async Task OnInitializedAsync()
    {
        estudiantes = await EstudianteService.GetAllEstudiantes();
        estudiantesPerdiendo = await EstudianteService.GetEstudiantePerdiendo();
    }


    void EditarEstudiante(int id)
    {
        NavigationManager.NavigateTo("/EstudianteEdit/" + id);
    }

    void MateriaPerdida()
    {
        NavigationManager.NavigateTo("/MateriaPerdidaSearch");
    }

    protected async Task DeleteEstudiante(int id)
    {

        await EstudianteService.EstudianteDelete(id);
        NavigationManager.NavigateTo("/");

    }

}
