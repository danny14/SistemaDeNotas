@page "/Horario"
@using SistemaDeNotas.Data
@using SistemaDeNotas.Data.Model

@using SistemaDeNotas.Data.Services
@using SistemaDeNotas.Data.PDF

@inject IMatriculaService MatriculaService;
@inject IEstudianteService EstudianteService;
@inject IPeriodoService PeriodoService;
@inject IMateriaService MateriaService;
@inject IGradoService GradoService;
@inject IHorarioPDF HorarioPDF;
@inject IHorarioService HorarioService;
@inject NavigationManager NavigationManager;

@using Microsoft.AspNetCore.Http

<h1>HORARIO</h1>


<select class="form-select" aria-label="Default select example" @onchange="listarPeriodo">
    @if (listaPeriodo != null)
    {
        @foreach (var periodo in listaPeriodo)
        {
            <option value="@periodo.idPeriodo">@periodo.nombrePeriodo</option>
        }
    }
</select>

<select class="form-select" aria-label="Default select example">
    @if (listaGrado != null)
    {
        @foreach (var grado in listaGrado)
        {
            <option value="@grado.idGrado">@grado.nombreGrado</option>
        }
    }
</select>
<td>
    <button class="btn btn-primary" @onclick="GeneraFactura">Imprimir horario</button>
</td>





<table class="table">
    <thead>
        <tr>
            <th>ID</th>

            <th>idmateria</th>
            <th>periodo</th>
            <th>profe</th>
            <th>dia</th>
            <th>horai</th>
            <th>horafi</th>
            <th>materia</th>


        </tr>
    </thead>
    <tbody>

        @if (horarios != null)
        {


            @foreach (var nota in horarios)

            {
        <tr class="table-warning">

            <td>@nota.idHorario</td>
            <td>@nota.idPeriodo</td>
            <td>@nota.idProfesor</td>
            <td>@nota.dia</td>
            <td>@nota.horaInicio</td>
            <td>@nota.horaFinal</td>
            <td>@nota.idMateria</td>






        </tr>
            }

        }

    </tbody>
</table>







@code {


    IEnumerable<matricula> notiviris;
    IEnumerable<periodo> listaPeriodo;

    IEnumerable<Materia> listaMateria;
    IEnumerable<Grado> listaGrado;
    IEnumerable<horario> horarios;
    public horario hora;
    public int pdf = 1;
    protected override async Task OnInitializedAsync()
    {

        notiviris = await MatriculaService.GetAllNotas();
        listaPeriodo = await PeriodoService.GetAllPeriodo();

        listaGrado = await GradoService.GetAllGrados();
        horarios = await HorarioService.GetHorario(1);

    }

    void EditarNotas(int id)
    {
        NavigationManager.NavigateTo("/NotasList " + id);
    }



    async Task listarPeriodo(ChangeEventArgs args)
    {
        listaPeriodo = await PeriodoService.GetPeriodoGrado(Convert.ToInt32(args.Value));
    }

    async Task GeneraFactura()
    {
        if (pdf > 0)
        {

            await HorarioPDF.GeneraFactura(horarios);
        }
    }


}


@*<td>
            <button class="btn btn-primary" @onclick="GeneraPDF">Imprimir Factura</button>
        </td>



                async Task GeneraPDF()
            {
                if (numFactura > 0)
                {
                    notiviris = await FacturaService.FacturaSelect(numFactura);
                    cliente = await ClienteService.ClienteSelect(factura.ClienteFactura);
                    detalleFactura = await FacturaProductoService.GetDetalleFactura(numFactura);
                    await FacturaServicePDF.GeneraFactura(factura, cliente, detalleFactura);
                }
            }






        <td>
        <button class="btn btn-primary" @onclick="GeneraPDF">Imprimir Factura</button>
    </td>
        async Task GeneraPDF()
        {
            if (numFactura > 0)
            {

                await HorarioServicePDF.GeneraFactura(hora, horarios);
            }
        }





*@
